head(ga.data,n=3)
grep(pattern="/muse/2", x=head(ga.data$pagePath,n=13), value=T)
top10 <- grep(pattern="/muse/2", x=head(ga.data$pagePath,n=13), value=T)
hyperlink <- function(x){
link <- paste('<li><a href="http://davetang.org', x, '"', sep='')
text <- t(as.data.frame(strsplit(x, '/')))
link <- paste(link, '>', text[,6], '</a></li>', sep='')
print(link)
}
hyperlink(top10)
q()
library(gcookbook)
install.packages(gcookbook)
install.packages('gcookbook')
library(gcookbook)
??gcookbook
simpledat
barplot(simpledat)
barplot(simpledat, beside=T)
simpledat_long
q()
tweet.data <- read.table("http://somelab.net/wp-content/uploads/2013/05/test_tweet_like_data.txt",
sep="\t",
stringsAsFactors=F,
row.names=NULL)
tweet.data <- read.table(url("http://somelab.net/wp-content/uploads/2013/05/test_tweet_like_data.txt"),
sep="\t",
stringsAsFactors=F,
row.names=NULL)
tweet.data
q()
10^-4
10^-4 + 1
10^-1.6 + 1
rbinom(n=1, size=25, prob = 0.99)
binom.test(x = 24, n = 25, p = 0.99)
binom.test(x = 24, n = 25, p = 0.99, alternative = "greater")
binom.test(x = 24, n = 25, p = 0.99)
binom.test(x = 25, n = 25, p = 0.99)
binom.test(x = 25, n = 24, p = 0.99)
binom.test(x = 24, n = 25, p = 0.99)
binom.test(x = 24, n = 25, p = 0.99, alternative = "greater")
binom.test(x = 24, n = 25, p = 0.99, alternative = "t")
binom.test(x = 24, n = 25, p = 0.99, alternative = "l")
dbinom(x = 24, size=25, prob=0.99)
?dbinom
dbinom(x = 25, size=25, prob=0.99)
dbinom(x = 23, size=25, prob=0.99)
0.777821359399147 / 0.777821359399147 + 5 * 0.196419535201805
0.777821359399147 / (5.777821359399147 * 0.196419535201805)
0.777821359399147 / 1.759919035408172
dbinom(x = 25, size=25, prob=0.99) / dbinom(x = 25, size=25, prob=0.99) + (5 + dbinom(x = 24, size=25, prob=0.99))
dbinom(x = 25, size=25, prob=0.99) / dbinom(x = 25, size=25, prob=0.99) + (5 * dbinom(x = 24, size=25, prob=0.99))
dbinom(x = 25, size=25, prob=0.99) / (dbinom(x = 25, size=25, prob=0.99) + (5 * dbinom(x = 24, size=25, prob=0.99)))
p <- 0.99
dbinom(x = 25, size=25, prob=p) / (dbinom(x = 25, size=25, prob=p) + (5 * dbinom(x = 24, size=25, prob=p)))
p <- 0.999
dbinom(x = 25, size=25, prob=p) / (dbinom(x = 25, size=25, prob=p) + (5 * dbinom(x = 24, size=25, prob=p)))
p <- 0.9999
dbinom(x = 25, size=25, prob=p) / (dbinom(x = 25, size=25, prob=p) + (5 * dbinom(x = 24, size=25, prob=p)))
q()
q()
source("http://bioconductor.org/biocLite.R")
biocLite("genomation")
biocLite()
q()
?rnorm
set.seed(31)
x.norm <- rnorm(n = 200, mean = 10, sd=2)
set.seed(31)
test <- rnoam(n=200, m=10, sd=2)
set.seed(31)
test <- rnorm(n=200, m=10, sd=2)
diff(x.norm, test)
head(x.norm)
head(test)
?diff
?complement
?subset
intersect(x = x.norm, y=test)
hist(x.norm, main="Histogram of observed data")
hist(x.norm, main="Histogram x.norm")
library(e1071)
install.packages('e1071')
library(e1071)
skewness(x.norm)
kurtosis(x.norm)
?kurtosis
kurtosis(rnorm(200,10,0.5))
kurtosis(rnorm(2000,10,0.5))
kurtosis(x.norm, type=1)
kurtosis(x.norm, type=2)
kurtosis(x.norm, type=3)
kurtosis(rnorm(10000,10,0.5))
kurtosis(rnorm(10000,10,2))
kurtosis(rnorm(10000,100,2))
kurtosis(rnbinom(n = 200, size = 10, prob = 0.5))
hist(rnbinom(200,10,0.5))
hist(rnbinom(200,100,0.5))
hist(rnbinom(200,1,0.5))
hist(rnbinom(200,5,0.5))
kurtosis(rnbinom(200,5,0.5))
kurtosis(rep(10,10))
rep(10,10)
rep(100,10)
kurtosis(rep(10,100))
hist(rnorm(10000, 0, 1))
kurtosis(rnorm(10000, 0, 1))
skewness(rnorm(10000, 0, 1))
shapiro.test(x.norm)
?shapiro.test
set.seed(31)
x.norm <- rnorm(n=200, m=10, sd=2)
shapiro.test(x.norm)
shapiro.test(rgamma(n = 200, shape = 1))
e
??euler
exp(1)
3!
!3
factorial(3)
e <- exp(1)
((e - 2)*(2 * 3))/factorial(3)
((e**-2)*(2^3))/factorial(3)
((e^-2)*(2^3))/factorial(3)
dpois(x = 3, lambda = 2)
s <- 1/32
x <- array()
i <- 1
while (s <= 32) {
s = s * 2
x[i] <- s
i <- i + 1
}
x
x[1]
x[2]
1/32*2
s <- 1/32
x <- array()
i <- 1
while (s <= 32) {
s = s * 2
x[i] <- s
i <- i + 1
}
x
0.25 * 2
q()
?pnorm
rnorm(mean=40.46, sd = sqrt(163.89))
table(rnorm(n = 10000, mean=40.46, sd = sqrt(163.89))>50)
table(rnorm(n = 10000, mean=40.46, sd = sqrt(163.89))>50)[1]
table(rnorm(n = 10000, mean=40.46, sd = sqrt(163.89))>50)[2]
table(rnorm(n = 10000, mean=40.46, sd = sqrt(163.89))>50)[2]/10000
?pnorm
x <- rnorm(10000)
plot(ecdf(x))
rnorm(n = 10000, mean = 40.46, sd = sqrt(163.89))
x <- rnorm(n = 10000, mean = 40.46, sd = sqrt(163.89))
ecdf(x)
plot(ecdf(x))
abline(v=50)
ecdf(x)
max(x)
x_2 <- rnorm(n = 10000, mean = 50.46, sd = sqrt(193.89))
lines(x_2)
plot(ecdf(x))
lines(ecdf(x_2))
y <- rpois(10000, lambda = 193.89)
lines(ecdf(y))
lines(ecdf(y), col=2)
plot(ecdf(y))
y <- rpois(10000, lambda = 50.46)
plot(ecdf(x))
lines(ecdf(y))
y <- rpois(n = 10000, lambda = 50.46)
lines(ecdf(y))
lines(ecdf(y))
plot(ecdf(y))
hist(y)
plot(density(y))
lines(density(x))
hist(y, breaks=100)
lines(density(y))
lines(density(y), col=2)
lines(density(y, freq=FALSE))
density(y)
plot(density(y))
plot(ecdf(rnorm(10000, sd = sqrt(0.2))))
plot(ecdf(rnorm(10000, sd = sqrt(0.2))), col="blue")
lines(ecdf(rnorm(10000, sd = sqrt(1.0))), col="red")
lines(ecdf(rnorm(10000, sd = sqrt(5.0))), col="yellow")
lines(ecdf(rnorm(10000, mean = -2, sd = sqrt(0.2))), col="green")
plot(ecdf(rnorm(10000, sd = sqrt(0.2))), col="blue", xlim=c(-5,5))
#red, mean = 0, variance = 1.0
lines(ecdf(rnorm(10000, sd = sqrt(1.0))), col="red")
#yellow, mean = 0, variance = 5.0
lines(ecdf(rnorm(10000, sd = sqrt(5.0))), col="yellow")
#green, mean = -2, variance = 0.5
lines(ecdf(rnorm(10000, mean = -2, sd = sqrt(0.2))), col="green")
abline(v=0)
abline(v=0, h=0.5)
abline(v=0)
#blue, mean = 0, variance = 0.2
plot(ecdf(rnorm(10000, sd = sqrt(0.2))), col="blue", xlim=c(-5,5))
#red, mean = 0, variance = 1.0
lines(ecdf(rnorm(10000, sd = sqrt(1.0))), col="red")
#yellow, mean = 0, variance = 5.0
lines(ecdf(rnorm(10000, sd = sqrt(5.0))), col="yellow")
#green, mean = -2, variance = 0.5
lines(ecdf(rnorm(10000, mean = -2, sd = sqrt(0.2))), col="green")
abline(v=0)
#blue, mean = 0, variance = 0.2
plot(ecdf(rnorm(10000, sd = sqrt(0.2))), col="blue", xlim=c(-5.1,5.1))
#red, mean = 0, variance = 1.0
lines(ecdf(rnorm(10000, sd = sqrt(1.0))), col="red")
#yellow, mean = 0, variance = 5.0
lines(ecdf(rnorm(10000, sd = sqrt(5.0))), col="yellow")
#green, mean = -2, variance = 0.5
lines(ecdf(rnorm(10000, mean = -2, sd = sqrt(0.2))), col="green")
abline(v=0)
#blue, mean = 0, variance = 0.2
plot(ecdf(rnorm(10000, sd = sqrt(0.2))), col="blue", xlim=c(-6,6))
#red, mean = 0, variance = 1.0
lines(ecdf(rnorm(10000, sd = sqrt(1.0))), col="red")
#yellow, mean = 0, variance = 5.0
lines(ecdf(rnorm(10000, sd = sqrt(5.0))), col="yellow")
#green, mean = -2, variance = 0.5
lines(ecdf(rnorm(10000, mean = -2, sd = sqrt(0.2))), col="green")
abline(v=0)
plot(ecdf(rnorm(10000, sd = sqrt(0.2))), col="blue", xlim=c(-6,6))
#red, mean = 0, variance = 1.0
lines(ecdf(rnorm(10000, sd = sqrt(1.0))), col="red")
#yellow, mean = 0, variance = 5.0
lines(ecdf(rnorm(10000, sd = sqrt(5.0))), col="yellow")
#green, mean = -2, variance = 0.5
lines(ecdf(rnorm(10000, mean = -2, sd = sqrt(0.2))), col="green")
abline(v=0)
legend(x = -6, y = 1)
?legend
legend(x = -6, y = 1, c("Mean = 0, Var = 0.2"), col = c('blue'))
?legend
legend(x = -6, y = 1, c("Mean = 0, Var = 0.2"), col = c('blue'), lty=2)
legend(x = -6, y = 1, c("Mean = 0, Var = 0.2"), col = c('blue'), lty=1)
legend(x = -6, y = 1, c("Mean = 0, Var = 0.2",
"Mean = 0, Var = 1.0",
legend(x = -6, y = 1, c("Mean = 0, Var = 0.2",
"Mean = 0, Var = 1.0",
"Mean = 0, Var = 5.0",
"Mean = -2, Var = 0.5"), col = c('blue', 'red', 'yellow', 'green'), lty=1)
?legend
density(rpois(10000, lambda = 2))
plot(density(rpois(10000, lambda = 2)))
hist(rpois(10000, lambda = 2))
hist(rpois(10000, lambda = 2), freq = T)
hist(rpois(10000, lambda = 2), freq = F)
rpois(10, 2)
rpois(100, 2)
hist(rpois(100,2))
table(rpois(10000, 2)==3)
1729/10000
table(rpois(100000, 2)==3)
hist(rpois(10000,2))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
364*364/365
prod(1:10)
prod(1:2)
prod(1:3)
factorial(3)
factorial(10)
364:364
1-364/365
second <- function(n,k){
factorial(n) / (factorial(n-k) * n^k)
}
second(365,2)
second <- function(n,k){
factorial(n) / ((factorial(n-k) * n^k))
}
second(365,2)
second <- function(n,k){
(factorial(n)) / ((factorial(n-k) * (n**k)))
}
second(365,2)
365^23
365!
factorial(365) / factorial(363) * 365^2
(365 * 364) / 365^2
1- (365 * 364) / 365^2
second <- function(n,k){
1 - (factorial(n) / (factorial(n-k) * n^k))
}
second(365,2)
second <- function(n,k){
(factorial(n)) / (factorial(n-k)) * (n^k)
}
second(365,2)
factorial(365)
perm_without_replacement <- function(n, r){
return(factorial(n)/factorial(n - r))
}
perm_without_replacement(2,2)
perm_without_replacement(10,2)
perm_without_replacement(365,2)
q()
dpois(x = 3, lambda = 2)
dpois(x = 10, lambda = 10)
for (lambda in 1:10){
print lambda
}
for (lambda in 1:10){
print(lambda)
}
my_mean <- 10
for (lambda in 1:10){
dpois(x=my_mean, lambda=lambda)
}
my_mean <- 10
my_max  <- 20
my_prob <- array()
for (lambda in 1:my_max){
p <- dpois(x=my_mean, lambda=lambda)
my_prob[lambda] <- p
}
my_prob
barplot(my_prob)
names(my_prob) <- 1:my_max
barplot(my_prob)
barplot(my_prob,
las=2)
density(my_prob)
plot(density(my_prob))
hist(my_prob)
hist(my_prob, breaks=20)
my_prob
barplot(my_prob,
las=2)
my_mean <- 100
my_max  <- 200
my_prob <- array()
for (lambda in 1:my_max){
p <- dpois(x=my_mean, lambda=lambda)
my_prob[lambda] <- p
}
names(my_prob) <- 1:my_max
barplot(my_prob,
las=2)
ppois(q = 2, lambda = 3)
ppois(q = 2, lambda = 3, lower.tail = F)
dpois(x = 2, lambda = 3)
pnorm(27.4, mean=50, sd=20)
qnorm(0.95, mean=100, sd=15)
qnorm(0.50, mean=100, sd=15)
x <- rnorm(1000, mean=100, sd=15)
hist(x, probability=TRUE)
xx <- seq(min(x), max(x), length=100)
lines(xx, dnorm(xx, mean=100, sd=15))
xx
x
xx
dnorm(xx, mean=100, sd=15)
head(xx)
dnorm(47.26269, 100, 15)
xx
plot(1:10)
lines(1:10,1:10)
plot(1:10)
lines(1:10)
plot(1:10)
lines(c(2,6,10), c(2,6,10))
lines(c(2,6,10), c(4,6,4))
x <- rnorm(1000, mean=100, sd=15)
hist(x, probability=TRUE)
xx <- seq(min(x), max(x), length=100)
lines(xx, dnorm(xx, mean=100, sd=15))
q()
26^3
q()
15 % 5
15 %% 5
3 %% 10
??modulus
3 \% 10
3 %% 10
3 % 10
?%
??%
?modulus
??modulus
3 %/% 10
5 %% 10
5 % 10
10 %% 5
10 %% 3
10 / 3
3 / 10
10 / 3
gcd <- function(u,v){
u + v;
}
gcd(1,1)
gcd <- function(u,v){
while(v != 0){
w = u %% v;
u = v;
v = w;
}
return(u);
}
gcd(10,15)
gcd(15,10)
10 %% 15
10 / 15
15 %% 15
16 %% 15
gcd(10,15)
gcd(15,10)
gcd(150,100)
gcd(20,20)
gcd(99,121)
gcd(144,24)
reverse <- function(x){
l <- length(x);
return(l)
}
reverse(1234)
length(1234)
??Length
library(stringr)
str_length(1234)
library(stringr)
reverse <- function(x){
l <- str_length(x);
return(l)
}
reverse(1234)
?require
reverse <- function(x){
require(stringr)
l <- str_length(x);
for(i in 1:l){
print(i);
}
return(l)
}
reverse(1234)
123 %% 10
reverse <- function(x){
require(stringr)
l <- str_length(x);
for(i in 1:l){
r <- x %% 10;
print(r);
}
return(l)
}
reverse(1234)
integer(10.2)
?interger
?integer
1234 / 10
as.integer(1234 / 10)
reverse <- function(x){
require(stringr)
l <- str_length(x);
for(i in 1:l){
r <- x %% 10;
print(r);
x <- as.integer(x/10)
}
}
reverse(1234)
reverse <- function(x){
require(stringr)
l <- str_length(x);
n <- vector();
for(i in 1:l){
r <- x %% 10;
print(r);
x <- as.integer(x/10)
n <- paste(n, r, sep='')
}
return(n)
}
reverse(1234)
reverse <- function(x){
require(stringr)
l <- str_length(x);
n <- vector();
for(i in 1:l){
r <- x %% 10;
x <- as.integer(x/10)
n <- paste(n, r, sep='')
}
return(as.integer(n))
}
reverse(1234)
reverse(39483)
q()
q()
?exp
exp(2)
exp(1)
q()
library(slidify)
publish('cage_r', 'davetang')
getwd()
setwd("slidify_test/")
publish('cage_r', 'davetang')
q()
